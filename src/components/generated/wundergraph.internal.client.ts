// Code generated by wunderctl. DO NOT EDIT.

import type { OperationArgsWithInput } from '@wundergraph/sdk'
import {
  createUserResponse,
  createUserInput,
  InternalcreateUserInput,
  InjectedcreateUserInput,
  deleteMultiUserResponse,
  deleteMultiUserInput,
  InternaldeleteMultiUserInput,
  InjecteddeleteMultiUserInput,
  deleteUserResponse,
  deleteUserInput,
  InternaldeleteUserInput,
  InjecteddeleteUserInput,
  getUserResponse,
  getUserInput,
  InternalgetUserInput,
  InjectedgetUserInput,
  getUserByEmailResponse,
  getUserByEmailInput,
  InternalgetUserByEmailInput,
  InjectedgetUserByEmailInput,
  listUserResponse,
  listUserInput,
  InternallistUserInput,
  InjectedlistUserInput,
  updateUserResponse,
  updateUserInput,
  InternalupdateUserInput,
  InjectedupdateUserInput,
  checkUserResponse,
  checkUserInput,
  InternalcheckUserInput,
  InjectedcheckUserInput,
  getShopUserResponse,
  getShopUserInput,
  InternalgetShopUserInput,
  InjectedgetShopUserInput,
  registerUserResponse,
  registerUserInput,
  InternalregisterUserInput,
  InjectedregisterUserInput,
  createShopResponse,
  createShopInput,
  InternalcreateShopInput,
  InjectedcreateShopInput,
  deleteShopResponse,
  deleteShopInput,
  InternaldeleteShopInput,
  InjecteddeleteShopInput,
  getShopResponse,
  getShopInput,
  InternalgetShopInput,
  InjectedgetShopInput,
  listShopResponse,
  listShopInput,
  InternallistShopInput,
  InjectedlistShopInput,
  updateShopResponse,
  updateShopInput,
  InternalupdateShopInput,
  InjectedupdateShopInput,
  meResponse,
  InternalmeInput,
  InjectedmeInput,
  updateProfileResponse,
  updateProfileInput,
  InternalupdateProfileInput,
  InjectedupdateProfileInput,
} from './models'

export interface InternalClient {
  queries: {
    getUser: (
      options: OperationArgsWithInput<InternalgetUserInput>
    ) => Promise<getUserResponse>
    getUserByEmail: (
      options: OperationArgsWithInput<InternalgetUserByEmailInput>
    ) => Promise<getUserByEmailResponse>
    listUser: (
      options: OperationArgsWithInput<InternallistUserInput>
    ) => Promise<listUserResponse>
    checkUser: (
      options: OperationArgsWithInput<InternalcheckUserInput>
    ) => Promise<checkUserResponse>
    getShopUser: (
      options: OperationArgsWithInput<InternalgetShopUserInput>
    ) => Promise<getShopUserResponse>
    getShop: (
      options: OperationArgsWithInput<InternalgetShopInput>
    ) => Promise<getShopResponse>
    listShop: (
      options: OperationArgsWithInput<InternallistShopInput>
    ) => Promise<listShopResponse>
    me: (
      options: OperationArgsWithInput<InternalmeInput>
    ) => Promise<meResponse>
  }
  mutations: {
    createUser: (
      options: OperationArgsWithInput<createUserInput>
    ) => Promise<createUserResponse>
    deleteMultiUser: (
      options: OperationArgsWithInput<deleteMultiUserInput>
    ) => Promise<deleteMultiUserResponse>
    deleteUser: (
      options: OperationArgsWithInput<deleteUserInput>
    ) => Promise<deleteUserResponse>
    updateUser: (
      options: OperationArgsWithInput<updateUserInput>
    ) => Promise<updateUserResponse>
    registerUser: (
      options: OperationArgsWithInput<registerUserInput>
    ) => Promise<registerUserResponse>
    createShop: (
      options: OperationArgsWithInput<createShopInput>
    ) => Promise<createShopResponse>
    deleteShop: (
      options: OperationArgsWithInput<deleteShopInput>
    ) => Promise<deleteShopResponse>
    updateShop: (
      options: OperationArgsWithInput<updateShopInput>
    ) => Promise<updateShopResponse>
    updateProfile: (
      options: OperationArgsWithInput<updateProfileInput>
    ) => Promise<updateProfileResponse>
  }
  withHeaders: (headers: { [key: string]: string }) => InternalClient
}

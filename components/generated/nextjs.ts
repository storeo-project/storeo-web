// Code generated by wunderctl. DO NOT EDIT.

import type { HelloResponseData } from './models'
import { createContext } from 'react'
import { hooks, SubscriptionArgs, WunderGraphContextProperties } from '@wundergraph/nextjs'

export type Role = 'admin' | 'user';

export enum AuthProvider {
	'storeo' = 'storeo',
}

export const AuthProviders = {
	storeo: AuthProvider.storeo,
}

export enum S3Provider {}

const defaultWunderGraphContextProperties: WunderGraphContextProperties<Role> = {
	ssrCache: {},
	client: null,
	clientConfig: {
		applicationHash: '570f1e77',
		applicationPath: 'app/main',
		baseURL: 'http://localhost:9991',
		sdkVersion: '0.91.5',
	},
	user: null,
	setUser: (value) => {
	},
	isWindowFocused: 'pristine',
	setIsWindowFocused: (value) => {
	},
	refetchMountedOperations: 0,
	setRefetchMountedOperations: (value) => {
	},
}

export const WunderGraphContext = createContext<WunderGraphContextProperties<Role>>(
	defaultWunderGraphContextProperties,
)

export const withWunderGraph = hooks.withWunderGraphContextWrapper(
	WunderGraphContext,
	defaultWunderGraphContextProperties,
)

export const useWunderGraph = hooks.useWunderGraph<Role, AuthProvider, S3Provider>(WunderGraphContext)

export const useQuery = {
	Hello: hooks.useQueryWithoutInput<HelloResponseData, Role>(WunderGraphContext, {
		operationName: 'Hello',
		requiresAuthentication: false,
	}),
}

export const useMutation = {}

export const useSubscription = {}

export const useLiveQuery = {
	Hello: (args?: SubscriptionArgs) =>
		hooks.useSubscriptionWithoutInput<HelloResponseData, Role>(WunderGraphContext, {
			operationName: 'Hello',
			isLiveQuery: true,
			requiresAuthentication: false,
		})(args),
}
